Count the Number of Consistent Strings

You are given a string allowed consisting of distinct characters and an array of strings words. A string is consistent if all characters in the string appear in the string allowed.
Return the number of consistent strings in the array words.

Example 1:
Input: allowed = "ab", words = ["ad","bd","aaab","baa","badab"]
Output: 2
Explanation: Strings "aaab" and "baa" are consistent since they only contain characters 'a' and 'b'.

Example 2:
Input: allowed = "abc", words = ["a","b","c","ab","ac","bc","abc"]
Output: 7
Explanation: All strings are consistent.

Example 3:
Input: allowed = "cad", words = ["cc","acd","b","ba","bac","bad","ac","d"]
Output: 4
Explanation: Strings "cc", "acd", "ac", and "d" are consistent.

Solution-
class Solution(object):
    def countConsistentStrings(self, allowed, words):
        res = 0
        for word in words:
            check = True
            for i in range(len(word)):
                if word[i] not in allowed:
                    check = False
                    break
                
            if check == True:
                res += 1
        return res
        
Success
Details 
Runtime: 228 ms, faster than 56.37% of Python online submissions for Count the Number of Consistent Strings.
Memory Usage: 16 MB, less than 56.76% of Python online submissions for Count the Number of Consistent Strings.
